security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            stateless: true


            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

            jwt: ~  # Auth JWT pour toutes les autres routes API

    access_control:
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/categories/names$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/icons$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/(categories|subcategories|dishes)$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/(categories|subcategories|dishes)/\d+$, methods: [GET], roles: PUBLIC_ACCESS }
        - { path: ^/api/users/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: ROLE_ADMIN }

